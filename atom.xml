<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wangxf | 博客</title>
  
  
  <link href="https://wangxf2023.github.io/atom.xml" rel="self"/>
  
  <link href="https://wangxf2023.github.io/"/>
  <updated>2024-02-18T15:12:51.200Z</updated>
  <id>https://wangxf2023.github.io/</id>
  
  <author>
    <name>Wangxf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次C语言编译运行失败原因</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1C%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1C%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/</id>
    <published>2024-02-18T14:42:52.000Z</published>
    <updated>2024-02-18T15:12:51.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记一次C语言编译运行失败原因"><a href="#记一次C语言编译运行失败原因" class="headerlink" title="记一次C语言编译运行失败原因"></a>记一次C语言编译运行失败原因</h2><blockquote><p>xxx.c文件名是不应该包含空格的</p></blockquote><p>在看一个文档时候其中例子是用C语言写的，于是用VS Code运行下，如何用VS Code运行C语言文件看这个贴子，<a href="https://blog.csdn.net/Dr_Cheeze/article/details/127964797">如何在 VS Code 中编写、运行C语言程序 教程_visual studio code怎么写c语言-CSDN博客</a>，VS Code只是编辑器，并不能编译C语言文件。</p><p>先运行个<code>hello world</code>看看，结果报错了，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Running] cd &quot;d:\VSCode Project\demo\hello world\&quot; &amp;&amp; gcc hello world.c -o hello world &amp;&amp; &quot;d:\VSCode Project\demo\hello world\&quot;hello world<br>gcc: error: hello: No such file or directory<br>gcc: error: world.c: No such file or directory<br>gcc: error: world: No such file or directory<br>gcc: fatal error: no input files<br>compilation terminated.<br><br>[Done] exited with code=1 in 0.045 seconds<br></code></pre></td></tr></table></figure><p>太久没有接触C了，不知道怎么处理这个报错，以为是环境、配置文件哪部错了。</p><p>后面发现原因了，我取的文件名是<code>hello world.c</code>，因为文件名空格导致的。</p><p>其实你分析那个报错信息，它是以空格为判断将文件截断的，<code>hello</code>是一个文件，<code>world.c</code>是一个文件，所以就会导致报没有这个文件，没有文件输入。</p><p>只能说菜，当然也提醒在取文件名时候尽量养成不要带空格的习惯。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;记一次C语言编译运行失败原因&quot;&gt;&lt;a href=&quot;#记一次C语言编译运行失败原因&quot; class=&quot;headerlink&quot; title=&quot;记一次C语言编译运行失败原因&quot;&gt;&lt;/a&gt;记一次C语言编译运行失败原因&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;xxx.c文件名是</summary>
      
    
    
    
    
    <category term="C" scheme="https://wangxf2023.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>记一次IDEA配置Maven失败原因</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1IDEA%E9%85%8D%E7%BD%AEMaven%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1IDEA%E9%85%8D%E7%BD%AEMaven%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/</id>
    <published>2024-02-18T14:42:26.000Z</published>
    <updated>2024-02-18T15:16:25.834Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记一次IDEA配置Maven失败原因"><a href="#记一次IDEA配置Maven失败原因" class="headerlink" title="记一次IDEA配置Maven失败原因"></a>记一次IDEA配置Maven失败原因</h2><blockquote><p>失败原因是因为IDEA版本和Maven版本不匹配导致的</p></blockquote><p>在一台电脑安装的Maven是<code>3.9.6</code>版本，IDEA安装的是IntelliJ IDEA 2021.1 (Ultimate Edition)，运行SpringBoot 2.5.x，pom.xml文件一直报红，不是没有导入依赖的报红，点上去没有任何操作可点。</p><p>Maven安装简单过一下，官网下载解压，添加环境变量（到bin目录），修改配置文件：</p><p>设置本地仓库位置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">localRepository</span>&gt;</span>D:/Maven/repository<span class="hljs-tag">&lt;/<span class="hljs-name">localRepository</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置镜像源（改为国内镜像源速度更快，这里用的阿里云的）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure><p>IDEA中把Maven设置成本地安装的，额外设置一下Runner-&gt;VM Options，设置<code>-DarchetypeCatalog=internal</code></p><p><strong>Build中报错如下：</strong></p><p>java.lang.RuntimeException: org.codehaus.plexus.component.repository.exception.ComponentLookupException: com.google.inject.ProvisionException: Unable to provision, see the following errors:</p><p>出现的错误的原因为Maven版本过高 ，与你使用的IDEA版本不兼容。</p><p>于是我重新安装了低版本（<code>3.6.2</code>）Maven解决了。</p><p>java.lang.RuntimeException: Cannot reconnect</p><p>将JDK for importer改为自己安装的jdk即可，运Build没问题了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;记一次IDEA配置Maven失败原因&quot;&gt;&lt;a href=&quot;#记一次IDEA配置Maven失败原因&quot; class=&quot;headerlink&quot; title=&quot;记一次IDEA配置Maven失败原因&quot;&gt;&lt;/a&gt;记一次IDEA配置Maven失败原因&lt;/h2&gt;&lt;blockquo</summary>
      
    
    
    
    
    <category term="maven" scheme="https://wangxf2023.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>记一次ivew从3.x升级到4.x后遇到的问题</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1ivew%E4%BB%8E3-x%E5%8D%87%E7%BA%A7%E5%88%B04-x%E5%90%8E%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1ivew%E4%BB%8E3-x%E5%8D%87%E7%BA%A7%E5%88%B04-x%E5%90%8E%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2024-02-18T14:42:04.000Z</published>
    <updated>2024-02-18T15:24:00.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记一次ivew从3-x升级到4-x后遇到的问题"><a href="#记一次ivew从3-x升级到4-x后遇到的问题" class="headerlink" title="记一次ivew从3.x升级到4.x后遇到的问题"></a>记一次ivew从3.x升级到4.x后遇到的问题</h2><blockquote><p>ivew 3.x升级到4.x select组件@on-select的返回值改变</p></blockquote><p>在有一个从前端动态增加select选项需求时候，ivew 4.x 版本有这个api，<code>@on-create</code></p><p>于是我把3.x的ivew升级到了4.x，原先3.x用的<code>@on-select</code>的返回值val，是option的value</p><p>4.x版本的返回值val是一个对象，包含option的value和label，取值即<code>val.value</code>，粒度更加细吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;记一次ivew从3-x升级到4-x后遇到的问题&quot;&gt;&lt;a href=&quot;#记一次ivew从3-x升级到4-x后遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;记一次ivew从3.x升级到4.x后遇到的问题&quot;&gt;&lt;/a&gt;记一次ivew从3.x升级到4.x</summary>
      
    
    
    
    
    <category term="前端" scheme="https://wangxf2023.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>记一次Windows微软账号登录0x80190001失败原因</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1Windows%E5%BE%AE%E8%BD%AF%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%950x80190001%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E8%AE%B0%E4%B8%80%E6%AC%A1Windows%E5%BE%AE%E8%BD%AF%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%950x80190001%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0/</id>
    <published>2024-02-18T14:41:43.000Z</published>
    <updated>2024-02-18T15:11:41.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记一次Windows微软账号登录0x80190001失败原因"><a href="#记一次Windows微软账号登录0x80190001失败原因" class="headerlink" title="记一次Windows微软账号登录0x80190001失败原因"></a>记一次Windows微软账号登录0x80190001失败原因</h2><p>Win10就开始自带Edge浏览器了，我比较喜欢用做主力浏览器，当然就少不了登录微软账号同步多端、多平台的书签等。</p><p>没注意是Win10哪个版本，用启动U盘装的系统，到登录微软账号那步，无法跳过，台式机试过把网线拔了然后就跳过了用本地账户登录。因为一开始的时候就强制要连接网络，笔记本我连的WIFI，又不能拔网线，那把WIFI源头关了行不行？没试过。用微软账号登录后可以切换为本地账户登录，那为啥不一开始就给出这个选项！</p><p>忘记密码了改了下微软账号密码，发现电脑的微软账户登录异常，于是重新登录，转半天圈，试了几次，报错<code>0x80190001</code>。我以为是网络原因，开了XXX后还是不行，看到帖子说把DNS改为<code>2.2.2.2</code>的，我试过还是不行。</p><p>即使你把XXX断开，或者你的代理走的不是全局，登录也还是失败了。直到把XXX给退出，登录微软账号才成功。</p><p>同样的问题在你连接XXX后，Microsoft Store打不开，但断开后正常访问的。</p><p>我猜测可能是后台有进程，但是XXX断开后，进程和运行时候进程是不一样的，而且IP也是不一样的，也可能微软它认为这是不安全的网络连接，防火墙拦截了，但关闭防火墙或者防火墙允许通过，连接XXX依然不能正常访问Microsoft Store。</p><p>所以就是在登录、使用微软产品时候，登录、访问失败，或许可以尝试以上做法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;记一次Windows微软账号登录0x80190001失败原因&quot;&gt;&lt;a href=&quot;#记一次Windows微软账号登录0x80190001失败原因&quot; class=&quot;headerlink&quot; title=&quot;记一次Windows微软账号登录0x80190001失败原因&quot;&gt;</summary>
      
    
    
    
    
    <category term="windows" scheme="https://wangxf2023.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>将代码推送到git新建仓库</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E5%B0%86%E4%BB%A3%E7%A0%81%E6%8E%A8%E9%80%81%E5%88%B0git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E5%B0%86%E4%BB%A3%E7%A0%81%E6%8E%A8%E9%80%81%E5%88%B0git%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93/</id>
    <published>2024-02-18T14:41:29.000Z</published>
    <updated>2024-02-18T14:52:36.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="将代码推送到git新建仓库"><a href="#将代码推送到git新建仓库" class="headerlink" title="将代码推送到git新建仓库"></a>将代码推送到git新建仓库</h2><blockquote><p>有时候需要将一个代码放到一个新的git仓库，然后方便后续版本管理。</p></blockquote><ol><li>首先去远程<code>git</code>新建仓库</li><li>然后本地<code>git</code>初始化</li><li><code>git add .</code></li><li><code>git commit -m &#39;xxx&#39;</code></li><li><code>git remote add origin 新建仓库地址</code></li><li><code>git pull origin master</code>   <strong>这步是因为远程新建仓库和新建的仓库内容冲突</strong></li><li><code>git push origin -u master</code></li></ol><p>之后的推送就是常规的步骤：</p><p><code>git add .</code></p><p><code>git commit -m &#39;xxx&#39;</code></p><p><code>git push origin master</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;将代码推送到git新建仓库&quot;&gt;&lt;a href=&quot;#将代码推送到git新建仓库&quot; class=&quot;headerlink&quot; title=&quot;将代码推送到git新建仓库&quot;&gt;&lt;/a&gt;将代码推送到git新建仓库&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有时候需要将一个代码放到一</summary>
      
    
    
    
    
    <category term="git" scheme="https://wangxf2023.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>使用vxe-table的vue项目打包部署服务器后样式不生效</title>
    <link href="https://wangxf2023.github.io/2024/02/18/%E4%BD%BF%E7%94%A8vxe-table%E7%9A%84vue%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E6%A0%B7%E5%BC%8F%E4%B8%8D%E7%94%9F%E6%95%88/"/>
    <id>https://wangxf2023.github.io/2024/02/18/%E4%BD%BF%E7%94%A8vxe-table%E7%9A%84vue%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E6%A0%B7%E5%BC%8F%E4%B8%8D%E7%94%9F%E6%95%88/</id>
    <published>2024-02-18T14:40:20.000Z</published>
    <updated>2024-02-18T15:17:41.578Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用vxe-table的vue项目打包部署服务器后样式不生效"><a href="#使用vxe-table的vue项目打包部署服务器后样式不生效" class="headerlink" title="使用vxe-table的vue项目打包部署服务器后样式不生效"></a>使用vxe-table的vue项目打包部署服务器后样式不生效</h3><blockquote><p>最近把一前端vue项目打包部署服务器后，发现vxe-table样式不生效</p></blockquote><p>网上找了一个帖子是这样说的，是因为vue和vxe-table版本不匹配导致的。</p><p>解决办法：项目包版本是以 <code>^</code> 开头，去掉 <code>^</code> 即可。</p><p><code>^</code> 会匹配最新的大版本依赖包，比如<code>^1.2.3</code>会匹配所有1.x.x的包，包括1.3.0，但是不包括2.0.0</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;使用vxe-table的vue项目打包部署服务器后样式不生效&quot;&gt;&lt;a href=&quot;#使用vxe-table的vue项目打包部署服务器后样式不生效&quot; class=&quot;headerlink&quot; title=&quot;使用vxe-table的vue项目打包部署服务器后样式不生效&quot;&gt;</summary>
      
    
    
    
    
    <category term="前端" scheme="https://wangxf2023.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo迁移到github pages</title>
    <link href="https://wangxf2023.github.io/2024/02/18/hexo%E8%BF%81%E7%A7%BB%E5%88%B0github%20pages/"/>
    <id>https://wangxf2023.github.io/2024/02/18/hexo%E8%BF%81%E7%A7%BB%E5%88%B0github%20pages/</id>
    <published>2024-02-18T14:39:33.000Z</published>
    <updated>2024-02-18T15:00:42.606Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo迁移到GitHub-Pages"><a href="#Hexo迁移到GitHub-Pages" class="headerlink" title="Hexo迁移到GitHub Pages"></a>Hexo迁移到GitHub Pages</h2><blockquote><p>最近把博客迁移到了Github Pages，有些小坑记录一下。</p></blockquote><p>一开始用的Gitee Pages，部署审核的时候应该是某种rules自动审核吧，有次台湾写成tw，疫情写成yq，才审核通过，恶心的点是它不会标给你哪里审核有问题，得靠你自己感觉摸索改。</p><p>后来换到了服务器，双十一打折买的一年，用了一年，体验很好，续费要快两千后面果断弃用了，这个并不是能带来收益的项目。</p><p>于是来到了Github Pages，在速度与恶心的审核之间这次我选择了侧重后者，还能自定义域名。</p><p><strong>说几个注意点：</strong></p><ul><li><p>github仓库名称必须取成<code>xx.github.io</code></p></li><li><p>git推送时候，用SSH验证更好一些</p></li><li><p>部署后js或者css样式无法显示，找到配置文件，加上<code>root: /</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">https://xxx.github.io</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br></code></pre></td></tr></table></figure></li></ul><p>最后，兜兜转转还是来到了github pages，大概率以后不会再折腾换了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hexo迁移到GitHub-Pages&quot;&gt;&lt;a href=&quot;#Hexo迁移到GitHub-Pages&quot; class=&quot;headerlink&quot; title=&quot;Hexo迁移到GitHub Pages&quot;&gt;&lt;/a&gt;Hexo迁移到GitHub Pages&lt;/h2&gt;&lt;bloc</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://wangxf2023.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序在使用`wx.request` API时候出现错误</title>
    <link href="https://wangxf2023.github.io/2023/10/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9C%A8%E4%BD%BF%E7%94%A8-wx-request-API%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF/"/>
    <id>https://wangxf2023.github.io/2023/10/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9C%A8%E4%BD%BF%E7%94%A8-wx-request-API%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF/</id>
    <published>2023-10-21T07:53:22.000Z</published>
    <updated>2023-11-12T08:11:53.757Z</updated>
    
    <content type="html"><![CDATA[<h4 id="微信小程序在使用wx-request-API时候出现错误"><a href="#微信小程序在使用wx-request-API时候出现错误" class="headerlink" title="微信小程序在使用wx.request API时候出现错误"></a>微信小程序在使用<code>wx.request</code> API时候出现错误</h4><p>如若已在管理后台更新域名配置，请刷新项目配置后重新编译项目，操作路径：“详情-域名信息”<br> <a href="https://www.xxx.cn/">https://www.xxx.cn</a> 不在以下 request 合法域名列表中，请参考文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html">https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html</a>(env: Windows,mp,1.06.2308310; lib: 3.1.3)</p><p>解决办法：开发者工具点击详情-&gt;本地设置，找到**不检验合法域名、web-view（业务域名）…**，勾选这个，重新编译下就正常使用了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;微信小程序在使用wx-request-API时候出现错误&quot;&gt;&lt;a href=&quot;#微信小程序在使用wx-request-API时候出现错误&quot; class=&quot;headerlink&quot; title=&quot;微信小程序在使用wx.request API时候出现错误&quot;&gt;&lt;/a&gt;微信</summary>
      
    
    
    
    
    <category term="前端" scheme="https://wangxf2023.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>记一次微信小程序使用Vant组件库（Vant Weapp）顺序与坑</title>
    <link href="https://wangxf2023.github.io/2023/10/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8Vant%E7%BB%84%E4%BB%B6%E5%BA%93%EF%BC%88Vant-Weapp%EF%BC%89%E9%A1%BA%E5%BA%8F%E4%B8%8E%E5%9D%91/"/>
    <id>https://wangxf2023.github.io/2023/10/10/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8Vant%E7%BB%84%E4%BB%B6%E5%BA%93%EF%BC%88Vant-Weapp%EF%BC%89%E9%A1%BA%E5%BA%8F%E4%B8%8E%E5%9D%91/</id>
    <published>2023-10-10T07:42:08.000Z</published>
    <updated>2023-11-12T07:56:22.870Z</updated>
    
    <content type="html"><![CDATA[<h4 id="记一次微信小程序使用Vant组件库（Vant-Weapp）顺序与坑"><a href="#记一次微信小程序使用Vant组件库（Vant-Weapp）顺序与坑" class="headerlink" title="记一次微信小程序使用Vant组件库（Vant Weapp）顺序与坑"></a>记一次微信小程序使用Vant组件库（Vant Weapp）顺序与坑</h4><ol><li><p>小程序<strong>根目录</strong>执行<code>npm init -y</code>，创建package.json</p></li><li><p><code>vant npm i @vant/weapp -S --production</code>，安装Vant Weapp</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 设置npm镜像源为国内镜像源，我几次安装都卡在这，直到设置为国内镜像源，几秒钟不夸张！！！</span><br>npm config set registry https://registry.npmmirror.com<br><span class="hljs-section"># 查看是否设成功</span><br>npm get registry<br></code></pre></td></tr></table></figure></li><li><p>打开微信开发者工具，点击 工具 -&gt; 构建 npm</p></li><li><p>修改app.json，去除“style”:  “v2”，小程序的新版基础组件强行加上了许多样式，难以覆盖，不关闭将造成部分组件样式混乱</p></li><li><p>修改project.config.json，如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>...<br><span class="hljs-attr">&quot;packNpmManually&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">&quot;packNpmRelationList&quot;</span>: [<br>      &#123;<br>        <span class="hljs-attr">&quot;packageJsonPath&quot;</span>: <span class="hljs-string">&quot;./package.json&quot;</span>,<br>        <span class="hljs-attr">&quot;miniprogramNpmDistDir&quot;</span>: <span class="hljs-string">&quot;./&quot;</span><br>      &#125;<br>    ],<br>...<br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>使用组件</p><ul><li><p>全局引入，在 app.json配置usingComponents选项引入组件</p></li><li><p>局部引入，在对应页面的xxx.json配置usingComponents选项引入组件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-comment">//这里以使用button组件为例</span><br>&#123;<br>    ...<br>    <span class="hljs-attr">&quot;usingComponents&quot;</span>: &#123;<br>      <span class="hljs-attr">&quot;van-button&quot;</span>: <span class="hljs-string">&quot;@vant/weapp/button/index&quot;</span><br>    &#125;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>在wxml中使用组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><p>Vant 中默认包含了一些常用样式，可以直接通过 className 的方式使用。</p><p>在 app.wxss 中引入内置样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;@vant/weapp/common/index.wxss&#x27;</span>;<br></code></pre></td></tr></table></figure><p>如果报错的话，<code>File not found: @vant/weapp/common/index.wxss</code></p><p>解决方法，使用相对路径</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;./miniprogram_npm/@vant/weapp/common/index.wxss&#x27;</span>;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;记一次微信小程序使用Vant组件库（Vant-Weapp）顺序与坑&quot;&gt;&lt;a href=&quot;#记一次微信小程序使用Vant组件库（Vant-Weapp）顺序与坑&quot; class=&quot;headerlink&quot; title=&quot;记一次微信小程序使用Vant组件库（Vant Wea</summary>
      
    
    
    
    
    <category term="前端" scheme="https://wangxf2023.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>记一次python操作Word</title>
    <link href="https://wangxf2023.github.io/2023/07/24/%E8%AE%B0%E4%B8%80%E6%AC%A1python%E6%93%8D%E4%BD%9CWord/"/>
    <id>https://wangxf2023.github.io/2023/07/24/%E8%AE%B0%E4%B8%80%E6%AC%A1python%E6%93%8D%E4%BD%9CWord/</id>
    <published>2023-07-24T13:54:19.000Z</published>
    <updated>2023-07-27T05:30:06.933Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到的一个问题，要把一个单机软件导出的A报告（Word格式的）的数据放到B报告（同样也是Word格式的），这个步骤一直是手工复制粘贴实现，极费时间。想过用OCR识别，看了一下价格有点抵不住，毕竟这个量不少，于是打算用python操作Word，刚好学习浅尝一下python。之前没接触过python，花了几天缝缝补补弄了一个并打包<code>Pyinstaller</code>打包成exe，这样的好处是拷贝到别人电脑也能用，不用考虑对方电脑有没有python环境，因为还得下载依赖库。</p><p>用的<code>python docx</code>以及<code>python docx template</code>，前者是一个可以读取、修改、创建Word的库，后者是一个可以替换Word制定内容的库。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># Word模板</span><br><br>亲爱的&#123;&#123;user&#125;&#125;您好:<br><span class="hljs-code">您在&#123;&#123;url&#125;&#125;上的邮件地址&#123;&#123;mail&#125;&#125;需要被确认，以便您接收通知消息。</span><br><span class="hljs-code"></span><br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 表格循环替换</span><br></code></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2023/07/24/263f8e4f6d9f36ca.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 渲染替换代码</span><br><span class="hljs-keyword">from</span> docxtpl <span class="hljs-keyword">import</span> DocxTemplate<br><br>tpl = DocxTemplate(<span class="hljs-string">&#x27;template/SJ046-02-XXXX-检测报告.docx&#x27;</span>)<br><br>context=&#123;<br>    <span class="hljs-string">&#x27;user&#x27;</span>:<span class="hljs-string">&#x27;likasi&#x27;</span>,<br>    <span class="hljs-string">&#x27;url&#x27;</span>:<span class="hljs-string">&#x27;httpblog.likasi.top&#x27;</span>,<br>    <span class="hljs-string">&#x27;mail&#x27;</span>:<span class="hljs-string">&#x27;yyyy@qq.com&#x27;</span>,<br>    <span class="hljs-string">&#x27;res&#x27;</span>:[<br>       &#123;<br>       <span class="hljs-string">&#x27;serial&#x27;</span>:<span class="hljs-string">&#x27;001&#x27;</span>,<br>          <span class="hljs-string">&#x27;number&#x27;</span>:<span class="hljs-string">&#x27;YNZH109203810&#x27;</span>,<br>          <span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;张三&#x27;</span>,<br>          <span class="hljs-string">&#x27;gendr&#x27;</span>:<span class="hljs-string">&#x27;男&#x27;</span>,<br>          <span class="hljs-string">&#x27;type&#x27;</span>:<span class="hljs-string">&#x27;放射卫生&#x27;</span>,<br>          <span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-string">&#x27;0.03&#x27;</span><br>       &#125;,<br>       &#123;<br>       <span class="hljs-string">&#x27;serial&#x27;</span>:<span class="hljs-string">&#x27;002&#x27;</span>,<br>          <span class="hljs-string">&#x27;number&#x27;</span>:<span class="hljs-string">&#x27;YNZH109203811&#x27;</span>,<br>          <span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;李丽&#x27;</span>,<br>          <span class="hljs-string">&#x27;gendr&#x27;</span>:<span class="hljs-string">&#x27;女&#x27;</span>,<br>          <span class="hljs-string">&#x27;type&#x27;</span>:<span class="hljs-string">&#x27;职业卫生&#x27;</span>,<br>          <span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-string">&#x27;0.02&#x27;</span><br>       &#125;, <br>    ]<br>&#125;<br><br>path = <span class="hljs-string">&quot;E:\\ReportReplace\\output\\&quot;</span><br><br>tpl.render(context)<br><br>tpl.save(path+<span class="hljs-string">&#x27;relace.docx&#x27;</span>)<br></code></pre></td></tr></table></figure><p>思路就是通过<code>python docx</code>读取Word内容，然后正则匹配出来，封装成想要渲染的context数据，再用<code>python docx template</code>渲染。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 读取数据代码</span><br><span class="hljs-keyword">import</span> docx<br><br>file=docx.Document(<span class="hljs-string">&#x27;XXXX.docx&#x27;</span>)<br><br><span class="hljs-comment"># 输出每一段的内容</span><br>para_list = []<br><span class="hljs-comment"># 段落</span><br><span class="hljs-keyword">for</span> para <span class="hljs-keyword">in</span> file.paragraphs:<br>    para_list.append(para.text)<br><br><span class="hljs-comment"># 上半部表 按行读取</span><br>table_list_top = []<br><span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> file.tables:<br>    <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> table.rows:<br>        <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> row.cells:<br>            table_list_top.append(cell.text)<br><br><span class="hljs-comment"># 下半部表 按列读取</span><br>table_list_bottom = []<br><span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> file.tables:<br>    <span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> table.columns:<br>        <span class="hljs-keyword">for</span> cell <span class="hljs-keyword">in</span> column.cells:<br>            table_list_bottom.append(cell.text)<br><br><span class="hljs-comment"># 正则匹配 </span><br>...<br><br><span class="hljs-comment"># 封装为dict</span><br><span class="hljs-meta">... </span>         <br></code></pre></td></tr></table></figure><p>以上都是只截取了部分代码，因为都放上也没有意义，这个还得根据实际文档来拿数据。在你Word模板设置字体字号就设置好，替换后的也就是那个字体和字号格式等。</p><p>人生苦短，我选python也不是没有道理的，各种库拿来就是用啊，还是很方便的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;工作中遇到的一个问题，要把一个单机软件导出的A报告（Word格式的）的数据放到B报告（同样也是Word格式的），这个步骤一直是手工复制粘贴实现，极费时间。想过用OCR识别，看了一下价格有点抵不住，毕竟这个量不少，于是打算用python操作Word，刚好学习浅尝一下pytho</summary>
      
    
    
    
    
    <category term="python" scheme="https://wangxf2023.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MacBook Pro A1706更换touchbar</title>
    <link href="https://wangxf2023.github.io/2023/06/28/MacBook-Pro-A1706%E6%9B%B4%E6%8D%A2touchbar/"/>
    <id>https://wangxf2023.github.io/2023/06/28/MacBook-Pro-A1706%E6%9B%B4%E6%8D%A2touchbar/</id>
    <published>2023-06-28T14:11:24.000Z</published>
    <updated>2023-06-28T15:01:11.587Z</updated>
    
    <content type="html"><![CDATA[<p>手上有个MacBook Pro A1706，touchbar能用但是整个右半边不会亮了，看着自然不爽。搜了下配件，淘宝找到一家，看着评论大家换了都不错，和店家沟通感觉也实在。苹果专卖店问过，有的开价到1700多，我向来很相信电子产品的京东问了一家，也是坑的我和客服沟通不愉快。于是买了touchbar配件(带排线)和螺丝刀。</p><p>MacBook Pro恶心的很啊，说下整个过程，首先拆后盖，螺丝用的就不是常规的梅花，该叫六角梅花吗，说不来，两长四短，靠近风扇位置的那两颗长，拆后盖，需要先从底部翘起来，直到听到扳开的声音，然后拿着后盖往下拽，得使劲拽。</p><p>接下来拆主板，各种大小不一的螺丝，起码两三种，给我的感觉就是，有点像塑料材质的接线末端带金属导线插到主板口子上，几乎都是那种很小很小的插口，然后用金属片上螺丝盖住。因为第一次接触，给我的感觉就是很恶心，生怕别人拆开来一样！然后换个touchar就得把主板拆下来，风扇还是什么排线，就这么三个点按在主板上！</p><p>把旧的touchbar拿下来，没工具，没办法只能暴力铲除，本来想学网上把底部胶吹热一整个划起来，人家用的热熔枪，我用吹风机，结果把我键盘两个键帽吹了烫了变形用不了，整个铲除过程太恶心了，这个胶粘的死的一比。花了起码四十多分钟。</p><p>装上之后上主板螺丝说实话心理都没谱，有的螺丝感觉上错了，虽然最后还是上完了（整个后盖都装上发现还剩一颗螺丝，检查了不知道是哪的，也没管，不想拆了）。</p><p>不出所料，开不开机，后来我把电源线重新扣了一下，应该是压着电源排线那颗大螺丝没上紧，重新上紧了，开机了，试了touchbar也正常。然后我上后盖，上后盖的时候我感觉我为了压紧拍了后盖，装touchbar排线那个地方我也拍了，导致装上后盖开机能正常显示变化，就是点了不起作用，我心想，新换的不会这么一下次就坏了吧，后来把后盖拆了，重新扣了下touchbar排线，上了下那里螺丝，正常了，然后这次上后盖没敢为了压紧使劲拍后盖了哈哈，装上也正常。</p><p>就是我记着这款四个typec接口，充电都行的，但是我的左边插上没反应了，当时心里一惊，卧槽，怎么办充电坏了，好在右边能充，也懒得拆了，有朋友知道是为什么吗？难道跟那个剩下的螺丝有关，那个螺丝是上在左边有个双排线的地方吗？</p><p>最后放几张图</p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/5600faec43925008.jpg"></p><p><em>PS：硬是怕别人拆解更换零件吗？</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/ff5d33a19e3999dc.jpg"></p><p><em>PS：MD屎都铲出来了</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/c9ede44a81f44e74.jpg"></p><p><em>PS：看着不戳眼睛了</em></p><p>网上各种搜，没搜到这款完整的拆机视频，很失望，修这个东西报价也是大几百到一千多都有。我的配件连上买的一套螺丝刀一百出头点。</p><p>后来是照着油管的搜到的这款拆机更换touchar看到一半怎么拆主板，然后自己摸索着换了touchbar。</p><p>贴个视频链接：<a href="https://www.youtube.com/watch?v=Yp2k0bdgIXU">https://www.youtube.com/watch?v=Yp2k0bdgIXU</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;手上有个MacBook Pro A1706，touchbar能用但是整个右半边不会亮了，看着自然不爽。搜了下配件，淘宝找到一家，看着评论大家换了都不错，和店家沟通感觉也实在。苹果专卖店问过，有的开价到1700多，我向来很相信电子产品的京东问了一家，也是坑的我和客服沟通不愉快</summary>
      
    
    
    
    
    <category term="折腾" scheme="https://wangxf2023.github.io/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>一次游记—昆明长虫山</title>
    <link href="https://wangxf2023.github.io/2023/06/17/%E4%B8%80%E6%AC%A1%E6%B8%B8%E8%AE%B0%E2%80%94%E6%98%86%E6%98%8E%E9%95%BF%E8%99%AB%E5%B1%B1/"/>
    <id>https://wangxf2023.github.io/2023/06/17/%E4%B8%80%E6%AC%A1%E6%B8%B8%E8%AE%B0%E2%80%94%E6%98%86%E6%98%8E%E9%95%BF%E8%99%AB%E5%B1%B1/</id>
    <published>2023-06-17T12:39:18.000Z</published>
    <updated>2023-06-28T14:08:33.394Z</updated>
    
    <content type="html"><![CDATA[<p>第一次听到看到长虫山样貌是在QQ空间一个高中同级同学动态看到，很好看拍的。直到这次自己去了看到照片中的这个场景，不是非常像，但是大概地形轮廓是这个大差不差这个样子。</p><p>说来也巧，那天突然就想去爬，抖音搜了一下，好巧刚好头天刚开山，搜了一点上山路线，结果怎么说呢，下午去的时候百度地图搜的定位到人最多访问的那个地方，结果滴滴司机也是第一次拉，那个地方车是不能直接到达的，后来我们猜测那个地方有可能是山北面。（当时还遇到几个也是去长虫山的导航到这，我还下去问路，人家说我们也是照着导航走到这！）导航到<strong>长虫山观景台</strong>，从这里上山小车可以到半山停车场，摩托甚至是可以干到山顶的，中途也有面包车拉到山顶下一小点的，也不贵。</p><p>风景挺不错的，那天天气很给力，黄昏一整个金色洒在大地。我现在更喜欢野景，路上听到一个下山的中年妇女说，这个就是纯纯爬山啊，吃的玩的也没有，硬生生爬山😂。沿途全是人啊，跟赶集一样，下山时候十一点多了，还是很多人在上山，可能因为刚开山，天气也比较好，加上是周末。</p><p>总体感觉不累，就是走多了脚有点疼，这样山林景爬山我很享受。下面贴点图，视频也拍了点懒得放上去了，非常后悔的是当天没带相机，当时是想带又怕爬山嫌重，结果后大悔。</p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/32749ae7a3e29dfb.jpg"></p><p><em>PS：一整个全景看上去给我的感觉就像东非大裂谷哈哈</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/f0255b954daa9a03.jpg"></p><p><em>PS：这是到达的第一个比较高的地方看到此景</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/1a6c23feb954685a.jpg"></p><p><em>PS：这是到达的第二个比较高的地方看到此景</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/dc1c8d81593dffd2.jpg"></p><p><em>PS：金色的光影穿梭移动</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/9db9e18ec7bac091.jpg"></p><p><em>PS：来个背影</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/dbdcb310848e4e31.jpg"></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/159616e314cf446b.jpg"></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/3281d1323e96af0f.jpg"></p><p><em>PS：夕阳无限好 (sei yang wu hen hou oh ~)</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/405afda2e3576876.jpg"></p><p><em>PS：可惜大家不高歌一首《海阔天空》</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/8afbe84e2ba86de0.jpg"></p><p><em>PS：凝望</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/06/28/799e9dcda9ffe62f.jpg"></p><p><em>PS：不要乱丢垃圾！！</em></p><p>不知下次再去是什么时候，不知什么时候感叹年轻真好，不知什么时候….，也许就明天，也许永远！但上山的路更有盼头。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一次听到看到长虫山样貌是在QQ空间一个高中同级同学动态看到，很好看拍的。直到这次自己去了看到照片中的这个场景，不是非常像，但是大概地形轮廓是这个大差不差这个样子。&lt;/p&gt;
&lt;p&gt;说来也巧，那天突然就想去爬，抖音搜了一下，好巧刚好头天刚开山，搜了一点上山路线，结果怎么说呢，</summary>
      
    
    
    
    
    <category term="游记" scheme="https://wangxf2023.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一些有用的东西</title>
    <link href="https://wangxf2023.github.io/2023/05/25/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <id>https://wangxf2023.github.io/2023/05/25/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF/</id>
    <published>2023-05-25T07:05:42.000Z</published>
    <updated>2023-10-10T03:26:32.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="免费在线MySQL"><a href="#免费在线MySQL" class="headerlink" title="免费在线MySQL"></a>免费在线MySQL</h3><p>某天在网上发现的，后来才知道这类免费的在线数据库其实还是有一些，但是稳不稳定就不一定了，我上次注册了个<code>db4free.net</code>，我写这个的时候应该还是过去几个月了，还在，除了速度有点慢，但不保证以后一直都在。</p><p>写这个的目的是知道有这种在线的免费数据库平台，但是仅仅是用来测试用，不能用于实际生成应用，安全、稳定等等很多因素都无法保证。</p><h3 id="EXIF信息查看器"><a href="#EXIF信息查看器" class="headerlink" title="EXIF信息查看器"></a>EXIF信息查看器</h3><p>查看一些照片的信息，但要保证是原图的话就会数据很全。比如是什么设备拍的，相机快门数有多少了，什么时间拍的，光圈、快门、ISO等等。所以照片的一些隐私信息分享到互联网的时候最好还是去除一下。不过现在的主流社交平台会做这步，比如QQ微信朋友圈上传的照片你再下载后查看这些信息基本没有了。</p><p>但是，EXIF信息也是可以修改的哦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;免费在线MySQL&quot;&gt;&lt;a href=&quot;#免费在线MySQL&quot; class=&quot;headerlink&quot; title=&quot;免费在线MySQL&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="有用" scheme="https://wangxf2023.github.io/tags/%E6%9C%89%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>霜冻前夜乐队live</title>
    <link href="https://wangxf2023.github.io/2023/05/22/%E9%9C%9C%E5%86%BB%E5%89%8D%E5%A4%9C%E4%B9%90%E9%98%9Flive/"/>
    <id>https://wangxf2023.github.io/2023/05/22/%E9%9C%9C%E5%86%BB%E5%89%8D%E5%A4%9C%E4%B9%90%E9%98%9Flive/</id>
    <published>2023-05-22T01:14:01.000Z</published>
    <updated>2023-06-28T14:10:00.802Z</updated>
    
    <content type="html"><![CDATA[<p>霜冻前夜——北京城里还在桀骜展声的一支金属乐队。2004年，霜冻前夜乐队于北京成立，是国内尝试叙事主题旋律金属风格的先行者。</p><p>重金属我基本没听过，现场live更是没有，之所以再三纠结下还是买了，看到一次抖音自媒体人打歌介绍，那是我第一次听霜冻前夜，乐队这个名字听着比较牛逼，而且成立十多年了，所以还是去了。</p><p>现场排队进场的时候我就感觉金属乐迷跟其他不太一样，都很酷酷的，更有装扮者。现场当然也是很轰炸啊，第一次在现场亲眼看到像迷笛音乐节战国舞台一排排搭建甩头。主唱肌肉男。现场很炸，当晚回来一直到第二天耳朵还是耳鸣嗡嗡嗡的。</p><p>比较欣赏的一点就是，不拘泥于传统印象重金属，歌曲会穿插中国传统乐器，这点很欣慰。美中不足是，迟到，没有安可，一个现场停下来有点审美疲劳。贴几张现场图，视频就不太想传了，有点麻烦。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/23/004052796a56de3d.jpg"></p><p><em>PS：崩了模糊了</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/23/9b3b82f995ebe0ab.jpg"></p><p><em>PS：太酷辣！</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/23/f7fce6cf181c2768.jpg"></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/23/7c76dbc2f4452786.jpg"></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/31/cb6b478600bfd0ee.jpg"></p><p><em>PS：认识我的人有没有看到我在哪？</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;霜冻前夜——北京城里还在桀骜展声的一支金属乐队。2004年，霜冻前夜乐队于北京成立，是国内尝试叙事主题旋律金属风格的先行者。&lt;/p&gt;
&lt;p&gt;重金属我基本没听过，现场live更是没有，之所以再三纠结下还是买了，看到一次抖音自媒体人打歌介绍，那是我第一次听霜冻前夜，乐队这个名字</summary>
      
    
    
    
    
    <category term="live" scheme="https://wangxf2023.github.io/tags/live/"/>
    
  </entry>
  
  <entry>
    <title>视频语音自动识别生成字幕工具VideoSrt</title>
    <link href="https://wangxf2023.github.io/2023/05/09/%E8%A7%86%E9%A2%91%E8%AF%AD%E9%9F%B3%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E7%94%9F%E6%88%90%E5%AD%97%E5%B9%95%E5%B7%A5%E5%85%B7VideoSrt/"/>
    <id>https://wangxf2023.github.io/2023/05/09/%E8%A7%86%E9%A2%91%E8%AF%AD%E9%9F%B3%E8%87%AA%E5%8A%A8%E8%AF%86%E5%88%AB%E7%94%9F%E6%88%90%E5%AD%97%E5%B9%95%E5%B7%A5%E5%85%B7VideoSrt/</id>
    <published>2023-05-09T06:27:02.000Z</published>
    <updated>2023-05-13T15:59:16.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间在弄一个短视频的时候给它配了字幕，非常笨的方法，一句一句卡点给打上的😅。可能以后还会弄到，不可能一直这么纯手动卡点打上吧，如果视频比较短还好，效率和卡点纯手工始终有点不行。</p><p>其实一开始也想过找一个根据视频语音自动生成字幕的工具，找了好几个大多要不光看界面就很垃圾，要不就晚上那些工具的老套路，注册开通vip充值，但是有点太贵，我只是偶尔会弄个视频要点字幕，而且也不敢保证这个工具的质量如何，充值了vip后会不会没多久就倒闭跑路了，数据安全问题能得到保障吗？</p><p>终于今天在52pj看到一个界面比较清爽的工具<code>VideoSrt</code>，看了一下还是开源的，只不过pro版本提供收费服务。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><blockquote><p><a href="https://github.com/wxbool/video-srt-windows">https://github.com/wxbool/video-srt-windows</a></p></blockquote><p><code>VideoSrt</code> 是用 <code>Golang</code>语言，基于 <a href="https://github.com/lxn/walk">lxn/walk</a> Windows-GUI 工具包开发。</p><p>这是一个可以识别视频语音自动生成字幕SRT文件的开源软件工具。<br>适用于快速、批量的为媒体（视频/音频）生成中/英文字幕、文本文件的业务场景。</p><p>0.3.5 版本会用到以下接口：</p><ul><li>阿里云 OSS对象存储</li><li>阿里云 录音文件识别</li><li>腾讯云 翻译Api / 百度云 翻译Api</li></ul><p>工具的大致原理是，调用ffmpeg将视频转为mp3存储到阿里云OSS，然后用阿里云(或者其他)语音识别服务识别成文本，如果存在需要翻译的话调用翻译服务，然后生成字幕格式文件SRT或者LRC。</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ul><li><p>创建阿里云OSS，这里需要注意的是读写权限设置为<strong>公共读</strong>（我一开始用的私有，测试错误提示要改为公共读），记下Endpoint、AccessKeyId、AccessKeySercet、BucketName、BucketDomain填写到工具的阿里云OSS配置。</p></li><li><p>开通智能语音交互服务，创建项目，应该是可以创建多个项目的，语音识别类型可以有很多，中文普通话、英文、四川话、北京话、粤语等等。</p></li><li><p>开通腾讯云机器翻译</p></li></ul><p>然后以上都搞好后，依次配置到工具对应的配置。</p><p>具体创建我这里就不想写了(截图，压缩，水印，上传图床太繁琐了)，可参考作者给的<a href="https://www.yuque.com/viggo-t7cdi/videosrt">VideoSrt文档 (yuque.com)</a></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/09/6a1f6077ff0a41fb.png"></p><p>PS：可以猜得出来是我国哪个地方口音？好像不行</p><p>如果不选择文件输出目录，会默认保存到和原视频同一位置，工具的右下角地方有执行日志，而且生成完毕后会自动清理掉阿里云OSS的存储。</p><h4 id="收费"><a href="#收费" class="headerlink" title="收费"></a>收费</h4><p>工具本身是开源的，收费的只是这些第三方云服务，以下是作者给的说明文档上面的。</p><p>具体的费用资费，请参考各大平台的产品介绍及价格明细表，参考链接如下：</p><ul><li><p>阿里云OSS对象存储：<a href="https://www.aliyun.com/price/product?spm=5176.7933691.1309819.7.77572a66GPAu1Y&amp;aly_as=bQ0LXW2f#/oss/detail">https://www.aliyun.com/price/product?spm=5176.7933691.1309819.7.77572a66GPAu1Y&amp;aly_as=bQ0LXW2f#/oss/detail</a></p></li><li><p>阿里云录音文件识别：<a href="https://help.aliyun.com/document_detail/84881.html?spm=5176.12157752.1251724..3fee75acYOrZ60#h1-u8BA1u8D39u65B9u5F0Fu548Cu62A5u4EF73">https://help.aliyun.com/document_detail/84881.html?spm=5176.12157752.1251724..3fee75acYOrZ60#h1-u8BA1u8D39u65B9u5F0Fu548Cu62A5u4EF73</a></p></li><li><p>百度翻译：<a href="http://api.fanyi.baidu.com/product/112">http://api.fanyi.baidu.com/product/112</a></p></li><li><p>腾讯云翻译：<a href="https://cloud.tencent.com/product/tmt/pricing">https://cloud.tencent.com/product/tmt/pricing</a></p></li></ul><p>目前，阿里云录音文件识别、百度翻译、腾讯云翻译 等服务目前都有一定的免费额度。</p><p>免费额度说明如下：</p><ul><li><p><a href="https://ai.aliyun.com/nls/filetrans?spm=5176.12061031.1228726.1.47fe3cb43I34mn">阿里云录音文件识别</a>（可开通试用版，允许每日 2小时 免费识别时长额度，试用版从开通之日起，有3个月的使用时间，3个月之后将会自动切换为商业版，按照后付费的方式计费）</p></li><li><p><a href="http://api.fanyi.baidu.com/api/trans/product/index">百度翻译</a>（通用翻译服务，标准版免费，高级版每月 200 万字免费）</p></li><li><p><a href="https://cloud.tencent.com/product/tmt">腾讯云翻译</a>（文本翻译服务，每月免费额度 500万 字符）</p></li><li><p><a href="https://www.aliyun.com/product/oss?spm=5176.8030368.h2v3icoap.38.1ad03aa49m8j4m">阿里云OSS对象存储</a>（无免费额度，正常情况下，仅会产生少量的流量费用，在不开通 <a href="https://ai.aliyun.com/nls/filetrans?spm=5176.12061031.1228726.1.47fe3cb43I34mn">录音文件识别商业版</a> 的情况下，充值1元可以正常使用30~60天左右）</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>繁琐的是创建开通自己的这些云服务，费用的话就是语音识别有点贵，OSS和翻译不贵。今天我试了一下一个三分钟左右的视频，翻译字符数272，腾讯云每月免费额度500万字符，语音识别试用版三个月每天允许2小时，OSS我以前用的时候冲了10块，这个不贵的。</p><p>把生成的SRT字幕打开把不对的地方修改下，然后导入到视频剪辑工具，省事省力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间在弄一个短视频的时候给它配了字幕，非常笨的方法，一句一句卡点给打上的😅。可能以后还会弄到，不可能一直这么纯手动卡点打上吧，如果视频</summary>
      
    
    
    
    
    <category term="工具" scheme="https://wangxf2023.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>密码管理工具KeePass</title>
    <link href="https://wangxf2023.github.io/2023/04/21/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7KeePass/"/>
    <id>https://wangxf2023.github.io/2023/04/21/%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7KeePass/</id>
    <published>2023-04-21T03:39:11.000Z</published>
    <updated>2023-04-21T06:27:17.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在当下这个时代，我们会接触到很多产品，这就难免会导致一些平台过段时间来登录的时候忘记了账号密码，大多数是忘记了密码。有的产品忘记密码只需要邮箱或者电话号码找回密码，最多再加下人脸验证等，但是有的产品的话忘记密码是很糟糕的，很难找回的，有的产品可能因为网络等原因导致频繁响应然后异常封号，如twitter。而且，经常忘记密码找回这个事情本身就很繁琐。</p><p>所以，我一直想找一款可以记录存储账号密码的并且可以加密的工具。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>KeePass</code>，一款开源、免费、支持全平台（官网只提供Windows版本，但是也提供了第三方的下载链接，如Linux、Mac等）、数据存储在本地，也可以通过WebDAV服务同步数据到云端，如国内的坚果云。</p><blockquote><p>​    官网：<a href="https://keepass.info/">KeePass Password Safe</a></p></blockquote><p>下载安装后，默认语言是英语，可以到官网（Translations）板块下载语言包，有中文简体语言包。</p><p>创建数据库，创建管理数据库的密码，注意：<strong>这个密码非常重要，它是打开这个数据库的唯一凭证，如果忘记将打不开数据库</strong>，然后选择位置，我们可以放到坚果云文件夹下，这样的话，每次添加记录保存的话会自动同步到坚果云文件夹下。</p><p>添加记录，填写标题，账号，密码，备注，网址等。</p><p>设置安全策略，软件默认是关闭后每次打开都需要输入数据库管理密码的，还可以设置比如当系统切换用户、系统挂起时等等的反正安全策略有很多，如全局页面下按<code>Esc</code>键锁定，密码定时过期，提醒，生成密码等。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这之前我一直都是把一些账号密码记在文档里面，以及靠浏览器自动保存账号密码。其实，密码保存的工具有很多，我粗略的对比了之下我选择了<code>KeePass</code>，有的密码存储在云端（需要网络），有的需要付费使用等。</p><p>当然，没有绝对的安全，定期更换密码，增加密码复杂度，做什么有个安全隐私的思想等相对要好一点。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在当下这个时代，我们会接触到很多产品，这就难免会导致一些平台过段时间来登录的时候忘记了账号密码，大多数是忘记了密码。有的产品忘记密码只需要邮</summary>
      
    
    
    
    
    <category term="工具" scheme="https://wangxf2023.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>不止喜剧——大乐透拼盘</title>
    <link href="https://wangxf2023.github.io/2023/04/21/%E4%B8%8D%E6%AD%A2%E5%96%9C%E5%89%A7%E2%80%94%E2%80%94%E5%A4%A7%E4%B9%90%E9%80%8F%E6%8B%BC%E7%9B%98/"/>
    <id>https://wangxf2023.github.io/2023/04/21/%E4%B8%8D%E6%AD%A2%E5%96%9C%E5%89%A7%E2%80%94%E2%80%94%E5%A4%A7%E4%B9%90%E9%80%8F%E6%8B%BC%E7%9B%98/</id>
    <published>2023-04-21T03:06:26.000Z</published>
    <updated>2023-05-13T15:54:42.733Z</updated>
    
    <content type="html"><![CDATA[<p>本来那天是去看纪念黄家驹30载致敬beyond的演出的，结果去了发现被延期了，今天是脱口秀，票价也便宜，也还有余票，来都来了就买了一张看。第一次看脱口秀，它这个是大乱斗拼盘，演员还是各有一般刷子，即兴表达发挥和舞台能力都非常不错。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/13/908e4d665c51d4c5.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本来那天是去看纪念黄家驹30载致敬beyond的演出的，结果去了发现被延期了，今天是脱口秀，票价也便宜，也还有余票，来都来了就买了一张看。第一次看脱口秀，它这个是大乱斗拼盘，演员还是各有一般刷子，即兴表达发挥和舞台能力都非常不错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http</summary>
      
    
    
    
    
    <category term="live" scheme="https://wangxf2023.github.io/tags/live/"/>
    
  </entry>
  
  <entry>
    <title>记一次百度智能云OCR简单了解</title>
    <link href="https://wangxf2023.github.io/2023/03/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%99%BE%E5%BA%A6%E6%99%BA%E8%83%BD%E4%BA%91OCR%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/"/>
    <id>https://wangxf2023.github.io/2023/03/07/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%99%BE%E5%BA%A6%E6%99%BA%E8%83%BD%E4%BA%91OCR%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</id>
    <published>2023-03-07T07:18:26.000Z</published>
    <updated>2023-03-07T09:26:38.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>OCR</strong>(Optical Character Recognition)光学字符识别，这个东西现在已经做的很好很成熟了，昨天跟别人聊到一个东西的时候说起来，大概是把那种word表格拍照然后上传到一个系统，然后这个系统导出word或者pdf报告。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>如果让我来做这个事情以我现在的认知水平，我的做法是把拍照上传的照片通过OCR提取想要的字段，然后代码操作（例如POI）word或者pdf。</p><p>我新用户百度智能云，个人认证之后可以免费领取一定时长的资源包使用，于是试了一下自定义模板OCR识别，简单的说一下使用感受。</p><p>识别的时候还是依靠你所框选的识别区域，比较适用于所框选的区域是比较固定面积大小的那种，比如规格定制的那种表单，识别区域所占大小其实差不大多，这样的话识别准确率才高，但是如果识别区域大小面积不固定，你在按照那个模板来识别就会把其他区域也识别进去，得重新制作模板。然后可以创建一个分类器，至少要求添加两个模板，每个模板至少上传30张训练集图片，才可训练模型。</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/a5c87ce56b1b626e.png"></p><p><em>注：识别区域(费用类别和主要业务说明)内容面积不大</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/f35f9ae2da4fb410.png"></p><p><em>注：识别区域(费用类别和主要业务说明)内容面积较大</em></p><p>如上是我自定义的两个模板，一个费用类别和主要业务说明这两块内容比较少（面积比较小），一个比较大。按理说通过分类器的上传的图片训练集训练后，费用类别和主要业务说明这两块内容（面积大小）夹在这个区间之内的图片都应该有一个较准确的识别率，但是测试结果识别准确率只有19.22%，我的理想状态是内容（面积大小）夹在这个区间之内的图片应该可以较准确的识别出来起码有个80%以上。</p><p>可能是我的训练集图片不够有价值，因为我偷懒只是搞了十张各种不同的，其余的是这十张的复制，导致这个训练集没有价值。再一个是模板只有两个，可能代表性不足。</p><p>后面我又重新加了模板（有代表性的那种），先是加了一个，后面加了两个，测试OCR短准确率较上一版降低了，而测试OCR长提高了，四个模板的分类器测试结果识别准确率只有8.61%，测试后反而是在内容面积不大的会分类到识别内容面积大的那个模板，自然就导致用了识别区域面积较大模板而把本身在要识别区域下面的不识别的区域也给识别上了，例如原本应该是 <code>实报金额  666元 </code>，但是结果是 <code>实报金额  666元总经理签</code>，因为分类到识别内容面积大的那个模板，而把这个单元格下面的内容也识别上了一部分。</p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/a6c99c484471966e.png"></p><p><img src="https://s3.bmp.ovh/imgs/2023/03/07/04043d229d1008b2.png"></p><p><em>注：使用四个模板的训练准确率</em></p><p>而在使用两个模板的时候，上面这种情况基本不会出现，识别内容面积不大的基本都是正确的。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最后，总的来说还是很厉害的百度智能云的自定义模板OCR识别，我感觉可能更适用于那种识别区域所占面积大小比较固定的，然后你标出识别区域范围变化不会太大，这种情况下识别准确率会很高。</p><p>继而就想到有时候有些东西规范化有它的好处，方便管理、使用，例如身份证、驾驶证这种，都一样的布局，假若要使用OCR识别的话，因为它的布局和字段等都是固定统一的，所以操作起来就会好很多，甚至都不用你自定义模板OCR识别，有人家给你做好的现成的xxOCR识别。但凡事不是绝对的，很多时候要学会根据实际场景需求来个性化定制这点很重要。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;OCR&lt;/strong&gt;(Optical Character Recognition)光学字符识别，这个东西现在已经做的很好</summary>
      
    
    
    
    
    <category term="OCR" scheme="https://wangxf2023.github.io/tags/OCR/"/>
    
  </entry>
  
  <entry>
    <title>《米店》</title>
    <link href="https://wangxf2023.github.io/2023/03/01/%E3%80%8A%E7%B1%B3%E5%BA%97%E3%80%8B/"/>
    <id>https://wangxf2023.github.io/2023/03/01/%E3%80%8A%E7%B1%B3%E5%BA%97%E3%80%8B/</id>
    <published>2023-03-01T01:30:25.000Z</published>
    <updated>2023-03-01T02:02:04.933Z</updated>
    
    <content type="html"><![CDATA[<p>又到了三月了，又想起这首歌《米店》，点开听了几遍，网上看到的一段摘抄：</p><p>“  其实三月成为“米店月”的字面原因非常简单，无非是因为《米店》开头的那一句：<strong>“三月的烟雨飘摇的南方。”</strong></p><p>这是张玮玮写于<strong>2007年的</strong>一首歌，就像很多民谣歌曲中俗套的“南方”和“姑娘”这种爱情故事一样，<strong>当时的张玮玮一个人在北京，他的爱人在南方，而“米店”是他爱人当时想要开的一家杂货铺的名字。</strong></p><p>但《米店》的魅力在于，<strong>它写出来一种独属于春天的温柔又迷蒙的情绪，关乎于爱情，但并不止于爱情。</strong></p><p>从烟雨飘摇的春天到街上匆忙的人群，再到舞步划过空房间的寂寞和码头上停泊的船只，<strong>《米店》在情歌之外，延展出一种从日常到命运的人生隐喻，让人逐渐迷失在那些悱恻的阴雨天气，在手风琴怀旧的旋律中徘徊良久。</strong> ”</p><p>《米店》这首歌有很多歌手、乐队翻唱、改编过，一首歌听了很多翻唱后还是最喜欢原唱，我觉得真情实感，有自己的创作理解。</p><p>三月的烟雨飘摇的南方<br>你坐在你空空的米店<br>你一手拿着苹果一手拿着命运<br>在寻找你自己的香</p><p>窗外的人们匆匆忙忙<br>把眼光丢在潮湿的路上<br>你的舞步划过空空的房间<br>时光就变成了烟</p><p>爱人 你可感到明天已经来临<br>码头上停着我们的船<br>我会洗干净头发爬上桅杆<br>撑起我们葡萄枝嫩叶般的家</p><p>《米店》——张玮玮</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;又到了三月了，又想起这首歌《米店》，点开听了几遍，网上看到的一段摘抄：&lt;/p&gt;
&lt;p&gt;“  其实三月成为“米店月”的字面原因非常简单，无非是因为《米店》开头的那一句：&lt;strong&gt;“三月的烟雨飘摇的南方。”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是张玮玮写于&lt;strong&gt;2</summary>
      
    
    
    
    
    <category term="音乐" scheme="https://wangxf2023.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>一次游记——云南丽江</title>
    <link href="https://wangxf2023.github.io/2023/02/13/%E4%B8%80%E6%AC%A1%E6%B8%B8%E8%AE%B0-%E4%BA%91%E5%8D%97%E4%B8%BD%E6%B1%9F/"/>
    <id>https://wangxf2023.github.io/2023/02/13/%E4%B8%80%E6%AC%A1%E6%B8%B8%E8%AE%B0-%E4%BA%91%E5%8D%97%E4%B8%BD%E6%B1%9F/</id>
    <published>2023-02-13T08:54:29.000Z</published>
    <updated>2023-02-13T15:02:45.684Z</updated>
    
    <content type="html"><![CDATA[<p>时间过得真快，不知不觉新的一年真正意义上的开始。风乍暖，日初长，花竞开，大家也都各自忙活，有机会三两朋友凑到一起出去逛逛很难得，记录下那惬意时光。</p><p>出发时候我已经够晚了，我们四连票，当时只剩不到十分钟他们还没上来，然后再只剩一分钟了还没来，我心想，卧槽不会出什么意外了吧？不会被放鸽子了吧？发消息也没人回，直到车已经开了快两分钟了，他们才从前面车厢找着过来，一个二个一头汗，喘着大气，有一个直接把衣服脱了，好家伙我一摸一身汗，才知道他们在检票的最后时候跑着上来的，赶忙从前面车厢先钻进来哈哈哈哈。</p><p>去玉龙雪山那天，早上五点多就起来，我们去的是早上，那天是多云，整个就是白茫茫天灰灰的样子，快要下山的时候出了一阵子太阳，当时山上好多人开心的叫着，下午到蓝月谷的时候天晴了，眼光下那种青蓝色水闪着亮晶晶的光斑波光粼粼，又是冬天下午的舒服的太阳，看见好几对新人在拍婚纱照，祝福他们！</p><p>下面是选了一些照片弄了个视频，嵌入进来就是不能显示1080P，播放起来很糊。视频原链接<a href="https://www.bilibili.com/video/BV1as4y1a79p/?vd_source=46e6ace7c5bc985e088f5baf62c27ecf">https://www.bilibili.com/video/BV1as4y1a79p/?vd_source=46e6ace7c5bc985e088f5baf62c27ecf</a></p><iframe src="//player.bilibili.com/player.html?aid=949372457&bvid=BV1as4y1a79p&cid=1006503846&page=1&high_quality=1&danmaku=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe><p>原图、原视频都还是清晰的，贴两张原图如下，B站嵌入外链参数加上了也只有720P，点视频原链接的来看比较就没压缩了。</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/13/e26e45377051833d.jpg"></p><p><em>注：玉龙雪山4680</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/13/e066249458a85424.jpg"></p><p><em>注：象牙山半山腰</em></p><p><img src="https://s3.bmp.ovh/imgs/2023/02/13/056fa217d4844e96.jpg"></p><p><em>注：蓝月谷</em></p><p>记录一下的意义对于我是什么？有时候你看着院子里的那颗花，想起种下去的时候才一小颗苗，过些日子来看，咦！长这么大哩，开花了，人的成长似乎也是如此，不知不觉的一天天在成长。以前看过个帖子，古书中三十万难民就概括了老百姓的一生，所以，你想记录些的时候就记录下来，日后不经意间翻翻看看也是一种美好的回忆！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时间过得真快，不知不觉新的一年真正意义上的开始。风乍暖，日初长，花竞开，大家也都各自忙活，有机会三两朋友凑到一起出去逛逛很难得，记录下那惬意时光。&lt;/p&gt;
&lt;p&gt;出发时候我已经够晚了，我们四连票，当时只剩不到十分钟他们还没上来，然后再只剩一分钟了还没来，我心想，卧槽不会出什</summary>
      
    
    
    
    
    <category term="游记" scheme="https://wangxf2023.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
</feed>
